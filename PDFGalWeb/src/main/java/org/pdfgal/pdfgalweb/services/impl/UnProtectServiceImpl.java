package org.pdfgal.pdfgalweb.services.impl;

import java.io.IOException;

import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.apache.pdfbox.exceptions.COSVisitorException;
import org.apache.pdfbox.exceptions.CryptographyException;
import org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;
import org.pdfgal.pdfgal.pdfgal.PDFGal;
import org.pdfgal.pdfgalweb.services.UnProtectService;
import org.pdfgal.pdfgalweb.utils.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

@Service
public class UnProtectServiceImpl implements UnProtectService {

	@Autowired
	private FileUtils fileUtils;

	@Autowired
	private PDFGal pdfGal;

	@Override
	public void unProtect(final MultipartFile file, final String password,
			final HttpServletResponse response) throws COSVisitorException,
			IOException, BadSecurityHandlerException, CryptographyException {

		if (!file.isEmpty() && StringUtils.isNotBlank(password)) {
			final String originalName = file.getOriginalFilename();
			final String inputUri = this.fileUtils.saveFile(file);
			final String outputUri = this.fileUtils
					.getAutogeneratedName(originalName);

			// File is unprotected
			this.pdfGal.unProtect(inputUri, outputUri, password);

			// The unprotected file is prepared for download
			this.fileUtils.prepareFileDownload(response, outputUri,
					originalName);

			// Temporal files are deleted from system
			this.fileUtils.delete(inputUri);
			this.fileUtils.delete(outputUri);
		}
	}
}
